{"version":3,"sources":["components/CodeEditor.js","hooks/useLocalStorage.js","components/App.js","index.js"],"names":["CodeEditor","lang","name","value","onChange","useState","isOpen","setIsOpen","className","onClick","prev","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","lineNumbers","theme","useLocalStorage","key","initValue","prefixedKey","json","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","delay","setTimeout","clearTimeout","sandbox","frameBorder","width","height","ReactDOM","render","document","getElementById"],"mappings":"sPA4CeA,G,8BAjCI,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAe,EAC1BC,oBAAS,GADiB,mBAC/CC,EAD+C,KACvCC,EADuC,KAOtD,OACE,yBACEC,UAAS,2BAAsBF,EAAS,GAAK,6BAE7C,yBAAKE,UAAU,2BACZN,EACD,4BAAQM,UAAU,SAASC,QAAS,kBAAMF,GAAU,SAACG,GAAD,OAAWA,OAC7D,kBAAC,IAAD,CAAiBC,KAAML,EAASM,IAAgBC,QAGpD,kBAAC,aAAD,CACEC,eAfe,SAACC,EAAQC,EAAMb,GAClCC,EAASD,IAeLA,MAAOA,EACPK,UAAU,4BACVS,QAAS,CACPC,cAAc,EACdC,MAAM,EACNC,KAAMnB,EACNoB,aAAa,EACbC,MAAO,iBCVFC,EAtBS,SAACC,EAAKC,GAC5B,IAAMC,EAHO,iBAGgBF,EADa,EAGhBnB,oBAAS,WACjC,IAAMsB,EAAOC,aAAaC,QAAQH,GAElC,OAAY,MAARC,EAAqBG,KAAKC,MAAMJ,GAEX,oBAAdF,EACFA,IAEAA,KAX+B,mBAGnCtB,EAHmC,KAG5B6B,EAH4B,KAmB1C,OAJAC,qBAAU,WACRL,aAAaM,QAAQR,EAAaI,KAAKK,UAAUhC,MAChD,CAACuB,EAAavB,IAEV,CAACA,EAAO6B,ICiBFI,EApCH,WAAO,IAAD,EACQb,EAAgB,OAAQ,IADhC,mBACTc,EADS,KACHC,EADG,OAEMf,EAAgB,MAAO,IAF7B,mBAETgB,EAFS,KAEJC,EAFI,OAGIjB,EAAgB,KAAM,IAH1B,mBAGTkB,EAHS,KAGLC,EAHK,OAIYrC,mBAAS,IAJrB,mBAITsC,EAJS,KAIDC,EAJC,KAgBhB,OAVAX,qBAAU,WACR,IAAMY,EAAQC,YAAW,WACvBF,EAAU,eAAD,OACQP,EADR,yBAC6BE,EAD7B,2BACmDE,EADnD,wBAGR,KAEH,OAAO,kBAAMM,aAAaF,MACzB,CAACR,EAAME,EAAKE,IAGb,oCACE,yBAAKjC,UAAU,4BACb,kBAAC,EAAD,CAAYP,KAAK,MAAMC,KAAK,OAAOC,MAAOkC,EAAMjC,SAAUkC,IAC1D,kBAAC,EAAD,CAAYrC,KAAK,MAAMC,KAAK,MAAMC,MAAOoC,EAAKnC,SAAUoC,IACxD,kBAAC,EAAD,CAAYvC,KAAK,aAAaC,KAAK,KAAKC,MAAOsC,EAAIrC,SAAUsC,KAE/D,yBAAKlC,UAAU,aACb,4BACEmC,OAAQA,EACRK,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,Y,MC5BjBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ccace64e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Controlled } from \"react-codemirror2\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCompressAlt, faExpandAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCoffee } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/mode/xml/xml\";\r\nimport \"codemirror/mode/javascript/javascript\";\r\nimport \"codemirror/mode/css/css\";\r\n\r\nconst CodeEditor = ({ lang, name, value, onChange }) => {\r\n  const [isOpen, setIsOpen] = useState(true);\r\n\r\n  const handleChange = (editor, data, value) => {\r\n    onChange(value);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`editor-container ${isOpen ? \"\" : \"editor-container--closed\"}`}\r\n    >\r\n      <div className=\"editor-container__title\">\r\n        {name}\r\n        <button className=\"button\" onClick={() => setIsOpen((prev) => !prev)}>\r\n          <FontAwesomeIcon icon={isOpen ? faCompressAlt : faExpandAlt} />\r\n        </button>\r\n      </div>\r\n      <Controlled\r\n        onBeforeChange={handleChange}\r\n        value={value}\r\n        className=\"editor-container__wrapper\"\r\n        options={{\r\n          lineWrapping: true,\r\n          lint: true,\r\n          mode: lang,\r\n          lineNumbers: true,\r\n          theme: \"material\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeEditor;\r\n","import { useState, useEffect } from \"react\";\r\n\r\n// used to avoid scope pollution in local storage\r\nconst PREFIX = \"codepen-clone-\";\r\n\r\nconst useLocalStorage = (key, initValue) => {\r\n  const prefixedKey = PREFIX + key;\r\n\r\n  const [value, setValue] = useState(() => {\r\n    const json = localStorage.getItem(prefixedKey);\r\n\r\n    if (json != null) return JSON.parse(json);\r\n\r\n    if (typeof initValue === \"function\") {\r\n      return initValue();\r\n    } else {\r\n      return initValue;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(prefixedKey, JSON.stringify(value));\r\n  }, [prefixedKey, value]);\r\n\r\n  return [value, setValue];\r\n};\r\n\r\nexport default useLocalStorage;\r\n","import React, { useState, useEffect } from \"react\";\nimport CodeEditor from \"./CodeEditor\";\n\nimport useLocalStorage from \"../hooks/useLocalStorage\";\n\nconst App = () => {\n  const [html, setHtml] = useLocalStorage(\"html\", \"\");\n  const [css, setCss] = useLocalStorage(\"css\", \"\");\n  const [js, setJs] = useLocalStorage(\"js\", \"\");\n  const [srcDoc, setSrcDoc] = useState(\"\");\n\n  useEffect(() => {\n    const delay = setTimeout(() => {\n      setSrcDoc(\n        `<html><body>${html}</body><style>${css}</style><script>${js}</script></html>`\n      );\n    }, 500);\n\n    return () => clearTimeout(delay);\n  }, [html, css, js]);\n\n  return (\n    <>\n      <div className=\"container container--top\">\n        <CodeEditor lang=\"xml\" name=\"HTML\" value={html} onChange={setHtml} />\n        <CodeEditor lang=\"css\" name=\"CSS\" value={css} onChange={setCss} />\n        <CodeEditor lang=\"javascript\" name=\"JS\" value={js} onChange={setJs} />\n      </div>\n      <div className=\"container\">\n        <iframe\n          srcDoc={srcDoc}\n          sandbox=\"allow-scripts\"\n          frameBorder=\"0\"\n          width=\"100%\"\n          height=\"100%\"\n        ></iframe>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nimport \"./css/index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}